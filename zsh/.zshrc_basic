alias mkdir="mkdir -pv" 
alias c="clear"
alias rd="rm -rf"
alias lg="lazygit"
alias nf='nvim "$(fzf)"'
alias df='df -h'
alias n='nvim'
alias q='exit 0'
alias f='./run.sh'

export PATH="$PATH:$HOME/.scripts/tmux"
bindkey -s '^f' 'tmux-sessionizer.sh\n'
function chdir() {
mkdir -p "$1" && cd "$1";
}

function cpphere() {
cp -f $HOME/dotfiles/clang/config/.clang-format .;
cp -f $HOME/dotfiles/clang/config/.clang-tidy .;
cp -f $HOME/dotfiles/clang/config/.editorconfig .;
}

function cmakehere() {
cp -rf $HOME/dotfiles/cmake_template/* .
}

# yazi terminal file manager
function ff() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

if [[ "$(uname)" == "Linux" ]]; then
  alias bat="batcat"
fi

autoload -Uz vcs_info
precmd() { vcs_info }
zstyle ':vcs_info:git:*' formats '%b '
setopt PROMPT_SUBST
PROMPT='%F{cyan}%2/ %F{red}${vcs_info_msg_0_}%F{green}>%f '

setclangd() {
    echo "CompileFlags:\n  CompilationDatabase: $1" > .clangd
}
rc() {
    echo `fc -ln -1` > run.sh
    chmod +x run.sh
}

[ -f ~/.zshrc.local ] && source ~/.zshrc.local
